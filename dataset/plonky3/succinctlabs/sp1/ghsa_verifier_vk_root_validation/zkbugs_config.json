{
  "Missing vk_root validation in Rust verifier": {
    "Id": "succinctlabs/sp1/ghsa-6248-228x-mmvh-1",
    "Project": "https://github.com/succinctlabs/sp1",
    "Commit": "459fac7b3a3977ab247305d061e4080019455900",
    "Fix Commit": "169a13a7395d0fdd700bd63b3ee1cd2e52bfcc28",
    "DSL": "Plonky3",
    "Vulnerability": "Under-Constrained",
    "Impact": "Soundness",
    "Root Cause": "Missing Constraint",
    "Reproduced": false,
    "Location": {
      "Path": "crates/recursion/circuit/src/machine/compress.rs, crates/recursion/circuit/src/machine/core.rs, crates/recursion/circuit/src/machine/deferred.rs",
      "Function": "verify_compressed, verify_shrink, verify_deferred_proof - vk_root equality assertions",
      "Line": "192, 537 (compress.rs); 588 (core.rs); 247 (deferred.rs)"
    },
    "Source": {
      "GitHub Security Advisory": {
        "Source Link": "https://github.com/succinctlabs/sp1/security/advisories/GHSA-6248-228x-mmvh",
        "Bug ID": "GHSA-6248-228x-mmvh (Bug 1 of 2)"
      }
    },
    "Commands": {
      "Setup Environment": "./zkbugs_setup.sh",
      "Reproduce": "./zkbugs_exploit.sh",
      "Compile and Preprocess": "./zkbugs_compile_setup.sh",
      "Positive Test": "./zkbugs_positive_test.sh",
      "Find Exploit": "./zkbugs_find_exploit.sh",
      "Clean": "./zkbugs_clean.sh"
    },
    "Short Description of the Vulnerability": "In SP1's Rust verifier, the verify_compressed, verify_shrink, and verify_deferred_proof functions checked if the verification key hash was in the precomputed recursion_vk_map, but did not verify that the vk_root (merkle root of all valid verifying key hashes) was correctly set in the proof's public values. This allowed a malicious prover to use an invalid vk_root. The recursive verifier and on-chain verifier were not affected as they correctly checked vk_root. Found during Zellic audit, fixed in v5.0.0.",
    "Short Description of the Exploit": "Not reproduced - no test case available. Would require crafting a malicious proof with an invalid vk_root that passes verification in compress/shrink/deferred stages.",
    "Proposed Mitigation": "Add equality checks that the vk_root in the public values equals the precomputed vk_root across all recursion verifier paths (implemented in v5.0.0)."
  }
}
