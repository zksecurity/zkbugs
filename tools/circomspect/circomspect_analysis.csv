bug title,success,evaluation,intended circomspect analysis pass
1. circom/circomlib_mimc/kobi_gurkan_mimc_hash_assigned_but_not_constrained,No,"Circomspect says ""Using the signal assignment operator `<--` is not necessary here"" but does not find the actual bug.",Unused output signal
2. circom/reclaimprotocol_circom_chacha/zksecurity_unsound_left_rotation,Yes,"Circomspect accurately detected the unconstrained signals, matching the described vulnerability.",Signal assignment
3. circom/spartan_ecdsa/yacademy_input_signal_s_is_not_constrained_in_eff_ecdsa_circom,No,Circomspect failed to identify the main vulnerability related to the unconstrained `s`.,Under-constrained signal
4. circom/spartan_ecdsa/yacademy_under_constrained_circuits_compromising_the_soundness_of_the_system,Yes,Circomspect successfully detected the unconstrained signals.,Signal assignment
5. circom/darkforest_circuits/daira_hopwood_darkforest_v0_3_missing_bit_length_check,No,Circomspect failed to identify the missing bit length check.,Not supported
6. circom/semaphore-protocol_semaphore/veridise_no_zero_value_validation,No,"Circomspect found something interesting, although that's not a bug. That code is just there to prevent [groth16 malleability attack](https://geometry.xyz/notebook/groth16-malleability). `signalHash` is an unused public input, it has to be there for some business logic reason outside the circuit. The constraint `signalHashSquared <== signalHash * signalHash` is added to prevent the attack described in the article.",Not supported
7. circom/succinctlabs_telepathy-circuits/veridise_arrayxor_is_under_constrained,Yes,"Correct, Circomspect successfully detected the unconstrained signal.",Unused output signal
8. circom/circom-bigint_circomlib/veridise_underconstrained_outputs_in_window4,No,This is expected since the bug is in external templates. The target circuit itself has no bug.,Unconstrained division
9. circom/succinctlabs_telepathy-circuits/trailofbits_prover_can_lock_user_funds_by_supplying_non-reduced_Y_values_to_G1BigIntToSignFlag,No,Circomspect did not directly address the missing range check for y-coordinate.,Not supported
10. circom/succinctlabs_telepathy-circuits/trailofbits_incorrect_handling_of_point_doubling_can_allow_signature_forgery,No,This is expected since it is a logical bug.,Not supported
11. circom/uniRep_protocol/veridise_missing_range_checks_on_comparison_circuits,No,Circomspect had trouble parsing the circuit code.,Not supported
12. circom/uniRep_protocol/veridise_underconstrained_circuit_allows_invalid_comparison,Yes,"In particular, Circomspect found ""Using `Num2Bits` to convert field elements to bits may lead to aliasing issues"" which is the same as the actual bug.",Field element arithmetic
13. circom/zkopru/leastauthority_previously_correct_ownership_proof_disabled_via_code_changes,No,"Circomspect did not find the issue. This bug is about misuse of external template, which isn't programmed into circomspect analysis rules.",Not supported
14. circom/circom-bigint_circomlib/veridise_underconstrained_points_in_montgomeryAdd,Yes,"Circomspect successfully detected the unconstrained division, it was the ""In signal assignments containing division, the divisor needs to be constrained to be non-zero"" finding.",Unconstrained division
15. circom/circom-bigint_circomlib/veridise_missing_range_checks_in_bigmod,No,"Circomspect outputs a bunch of warning but none of them is the actual bug. Also, lots of false positive means bad performance.",Not supported
16. circom/circom-bigint_circomlib/veridise_decoder_accepting_bogus_output_signal,No,This is expected since it is a logical bug.,Unused output signal
17.  circom/circom-bigint_circomlib/veridise_underconstrained_points_in_edwards2Montgomery,Yes,"Circomspect successfully detected the unconstrained division, specifically it was ""In signal assignments containing division, the divisor needs to be constrained to be non-zero"".",Unconstrained division
18. circom/circom-bigint_circomlib/veridise_underconstrained_points_in_montgomeryDouble,Yes,"Circomspect successfully detected the unconstrained division, specifically it was ""In signal assignments containing division, the divisor needs to be constrained to be non-zero"".",Unconstrained division
19. circom/circom-bigint_circomlib/veridise_underconstrained_points_in_montgomery2Edwards,Yes,"Circomspect successfully detected the unconstrained division, specifically it was ""In signal assignments containing division, the divisor needs to be constrained to be non-zero"".",Unconstrained division
20. circom/maci/hashcloak_data_are_not_fully_verified_during_state_update,No,Circomspect did not find the bug.,Not supported
21. circom/circom-bigint_circomlib/veridise_underconstrained_outputs_in_bitElementMulAny,Yes,"Circomspect successfully detected the unconstrained division, specifically it was ""In signal assignments containing division, the divisor needs to be constrained to be non-zero"".",Unconstrained division
23. circom/circom-bigint_circomlib/veridise_underconstrained_outputs_in_windowmulfix,No,"This is expected since the bug is in external templates, not the target circuit code.",Unconstrained division
24. circom/circom-bigint_circomlib/veridise_decoder_accepting_bogus_output_signal,No,This is expected since the bug only occurs during integration. The circuit itself is just fine.,Under-constrained signal
25. circom/circom-bigint_circomlib/veridise_underconstrained_points_in_edwards2Montgomery,Yes,"Circomspect successfully detected the unconstrained division, specifically it was ""In signal assignments containing division, the divisor needs to be constrained to be non-zero"".",Unconstrained division
